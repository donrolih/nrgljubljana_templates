NRG Ljubljana 2023.05 (c) Rok Zitko, rok.zitko@ijs.si, 2005-2023
Mathematica version: 14.0.0 for Mac OS X ARM (64-bit) (December 13, 2023)
sneg version: 2.0.7
Loading module initialparse.m
Loading module sym.m
Options: {GENERATE_TEMPLATE, GENERATE_TEMPLATE_ALL}
Loading module models.m
models started
Loading module custommodels.m
Can't load custommodels.m. Continuing.
Loading module 2orb-UJ.m
def2ch, NRDOTS=2
H0=coefzeta[1, 0]*(-1 + nc[f[0, 0, 0], f[1, 0, 0]] + nc[f[0, 0, 1], f[1, 0, 1]]) + coefzeta[2, 0]*(-1 + nc[f[0, 1, 0], f[1, 1, 0]] + nc[f[0, 1, 1], f[1, 1, 1]])
"SigmaHartree1[UP]="-nc[d[0, 1, 1], d[1, 1, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
   nc[d[0, 1, 1], d[1, 1, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
       nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 1, 1], d[1, 1, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 
        2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - 
   nc[d[0, 1, 1], d[1, 1, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + nc[d[0, 1, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 1, 1]] - 
   nc[d[0, 1, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[1, 1, 1]] - nc[d[0, 1, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 1, 1]]/4 + 
   nc[d[0, 1, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 1, 1]] - nc[d[1, 1, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 1]] + 
   nc[d[1, 1, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[0, 1, 1]] + nc[d[1, 1, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 1]]/4 - 
   nc[d[1, 1, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 1]] - nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 1], d[1, 1, 1]] + 
   nc[U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 1], 
    d[1, 1, 1]] + nc[J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 1], d[1, 1, 1]]/4 - 
   nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 1], d[1, 1, 1]] + U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]])/4 + 
   U12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]])/2 + 
   (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]])/2 - (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] + 
   (J12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]] + U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]
"SigmaHartree1[DO]="-nc[d[0, 1, 0], d[1, 1, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
   nc[d[0, 1, 0], d[1, 1, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
       nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 1, 0], d[1, 1, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 
        2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - 
   nc[d[0, 1, 0], d[1, 1, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + nc[d[0, 1, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 1, 0]] - 
   nc[d[0, 1, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[1, 1, 0]] - nc[d[0, 1, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 1, 0]]/4 + 
   nc[d[0, 1, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 1, 0]] - nc[d[1, 1, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 0]] + 
   nc[d[1, 1, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[0, 1, 0]] + nc[d[1, 1, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 0]]/4 - 
   nc[d[1, 1, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 0]] - nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 0], d[1, 1, 0]] + 
   nc[U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 0], 
    d[1, 1, 0]] + nc[J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 0], d[1, 1, 0]]/4 - 
   nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 0], d[1, 1, 0]] + U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]])/4 + 
   U12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]])/2 + 
   (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]])/2 - (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] + 
   (J12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]] + U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]
"SigmaHartree1="(-nc[d[0, 1, 0], d[1, 1, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
     nc[d[0, 1, 0], d[1, 1, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
         nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 1, 0], d[1, 1, 0], J12*
        (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - nc[d[0, 1, 0], d[1, 1, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + 
     nc[d[0, 1, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 1, 0]] - nc[d[0, 1, 0], 
      U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 1, 0]] - 
     nc[d[0, 1, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 1, 0]]/4 + 
     nc[d[0, 1, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 1, 0]] - nc[d[0, 1, 1], d[1, 1, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
     nc[d[0, 1, 1], d[1, 1, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
         nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 1, 1], d[1, 1, 1], J12*
        (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - nc[d[0, 1, 1], d[1, 1, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + 
     nc[d[0, 1, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 1, 1]] - nc[d[0, 1, 1], 
      U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 1, 1]] - 
     nc[d[0, 1, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 1, 1]]/4 + 
     nc[d[0, 1, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 1, 1]] - nc[d[1, 1, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 0]] + 
     nc[d[1, 1, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
      d[0, 1, 0]] + nc[d[1, 1, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 0]]/4 - 
     nc[d[1, 1, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 0]] - nc[d[1, 1, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 1]] + 
     nc[d[1, 1, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
      d[0, 1, 1]] + nc[d[1, 1, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 1]]/4 - 
     nc[d[1, 1, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 1]] - nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 0], d[1, 1, 0]] - 
     nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 1, 1], d[1, 1, 1]] + nc[U12*
       (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 0], 
      d[1, 1, 0]] + nc[U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
         nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 1], d[1, 1, 1]] + nc[J12*
        (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 0], d[1, 1, 0]]/4 + 
     nc[J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 1, 1], d[1, 1, 1]]/4 - nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 0], d[1, 1, 0]] - 
     nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 1, 1], d[1, 1, 1]] + 2*U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]])/2 + 
     2*U12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]])/2 + 2*U12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] + 
     J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] + J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] - (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]])/2 + 2*U12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] + 
     (J12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])/2 + 2*U12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]] + 2*U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]])/2
"SigmaHartree2[UP]="-nc[d[0, 2, 1], d[1, 2, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
   nc[d[0, 2, 1], d[1, 2, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
       nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 2, 1], d[1, 2, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 
        2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - 
   nc[d[0, 2, 1], d[1, 2, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + nc[d[0, 2, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 2, 1]] - 
   nc[d[0, 2, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[1, 2, 1]] - nc[d[0, 2, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 2, 1]]/4 + 
   nc[d[0, 2, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 2, 1]] - nc[d[1, 2, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 1]] + 
   nc[d[1, 2, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[0, 2, 1]] + nc[d[1, 2, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 1]]/4 - 
   nc[d[1, 2, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 1]] - nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 1], d[1, 2, 1]] + 
   nc[U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 1], 
    d[1, 2, 1]] + nc[J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 1], d[1, 2, 1]]/4 - 
   nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 1], d[1, 2, 1]] + U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]])/4 + 
   U12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]])/2 + 
   (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]])/2 - (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] + 
   (J12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]] + U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]
"SigmaHartree2[DO]="-nc[d[0, 2, 0], d[1, 2, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
   nc[d[0, 2, 0], d[1, 2, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
       nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 2, 0], d[1, 2, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 
        2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - 
   nc[d[0, 2, 0], d[1, 2, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + nc[d[0, 2, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 2, 0]] - 
   nc[d[0, 2, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[1, 2, 0]] - nc[d[0, 2, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 2, 0]]/4 + 
   nc[d[0, 2, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 2, 0]] - nc[d[1, 2, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 0]] + 
   nc[d[1, 2, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
    d[0, 2, 0]] + nc[d[1, 2, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 0]]/4 - 
   nc[d[1, 2, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 0]] - nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 0], d[1, 2, 0]] + 
   nc[U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 0], 
    d[1, 2, 0]] + nc[J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
        2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 0], d[1, 2, 0]]/4 - 
   nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 0], d[1, 2, 0]] + U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]])/4 + 
   U12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]])/2 + 
   (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]])/2 - (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] + 
   (J12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])/4 + U12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]] + U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]
"SigmaHartree2="(-nc[d[0, 2, 0], d[1, 2, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
     nc[d[0, 2, 0], d[1, 2, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
         nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 2, 0], d[1, 2, 0], J12*
        (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - nc[d[0, 2, 0], d[1, 2, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + 
     nc[d[0, 2, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 2, 0]] - nc[d[0, 2, 0], 
      U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 2, 0]] - 
     nc[d[0, 2, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 2, 0]]/4 + 
     nc[d[0, 2, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 2, 0]] - nc[d[0, 2, 1], d[1, 2, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]] + 
     nc[d[0, 2, 1], d[1, 2, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
         nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])] + nc[d[0, 2, 1], d[1, 2, 1], J12*
        (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])]/4 - nc[d[0, 2, 1], d[1, 2, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]] + 
     nc[d[0, 2, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[1, 2, 1]] - nc[d[0, 2, 1], 
      U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 2, 1]] - 
     nc[d[0, 2, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[1, 2, 1]]/4 + 
     nc[d[0, 2, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[1, 2, 1]] - nc[d[1, 2, 0], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 0]] + 
     nc[d[1, 2, 0], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
      d[0, 2, 0]] + nc[d[1, 2, 0], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 0]]/4 - 
     nc[d[1, 2, 0], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 0]] - nc[d[1, 2, 1], U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 1]] + 
     nc[d[1, 2, 1], U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), 
      d[0, 2, 1]] + nc[d[1, 2, 1], J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 
          2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 1]]/4 - 
     nc[d[1, 2, 1], U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 1]] - nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 0], d[1, 2, 0]] - 
     nc[U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]], d[0, 2, 1], d[1, 2, 1]] + nc[U12*
       (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 0], 
      d[1, 2, 0]] + nc[U12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
         nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 1], d[1, 2, 1]] + nc[J12*
        (-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 0], d[1, 2, 0]]/4 + 
     nc[J12*(-nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - 2*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] - 2*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] + 
          nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]), d[0, 2, 1], d[1, 2, 1]]/4 - nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 0], d[1, 2, 0]] - 
     nc[U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]], d[0, 2, 1], d[1, 2, 1]] + 2*U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]] + (J12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]])/2 + 
     2*U12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]])/2 + 2*U12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] + 
     J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]] + J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]] - (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]])/2 + 2*U12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] + 
     (J12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])/2 + 2*U12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]] + 2*U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]])/2
NRDOTS:2 CHANNELS:2 COEFCHANNELS:2
basis:{d[1], d[2], f[0], f[1]}
Hamiltonian generated. -coefzeta[1, 0] - coefzeta[2, 0] + eps1*nc[d[0, 1, 0], d[1, 1, 0]] + gammaPolCh[1]*nc[d[0, 1, 0], f[1, 0, 0]] + eps1*nc[d[0, 1, 1], d[1, 1, 1]] + gammaPolCh[1]*nc[d[0, 1, 1], f[1, 0, 1]] + 
   eps2*nc[d[0, 2, 0], d[1, 2, 0]] + gammaPolCh[2]*nc[d[0, 2, 0], f[1, 1, 0]] + eps2*nc[d[0, 2, 1], d[1, 2, 1]] + gammaPolCh[2]*nc[d[0, 2, 1], f[1, 1, 1]] + gammaPolCh[1]*nc[f[0, 0, 0], d[1, 1, 0]] + 
   coefzeta[1, 0]*nc[f[0, 0, 0], f[1, 0, 0]] + gammaPolCh[1]*nc[f[0, 0, 1], d[1, 1, 1]] + coefzeta[1, 0]*nc[f[0, 0, 1], f[1, 0, 1]] + gammaPolCh[2]*nc[f[0, 1, 0], d[1, 2, 0]] + coefzeta[2, 0]*nc[f[0, 1, 0], f[1, 1, 0]] + 
   gammaPolCh[2]*nc[f[0, 1, 1], d[1, 2, 1]] + coefzeta[2, 0]*nc[f[0, 1, 1], f[1, 1, 1]] - U1*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]] - (J12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]])/4 - 
   U12*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]])/4 - U12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - (J12*nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]])/2 - 
   (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]])/2 + (J12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]])/4 - U12*nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - 
   (J12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]])/4 - U12*nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]] - U2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]
SCALE[0]=1.0201394465967895
faktor=1.3862943611198906
Generating basis
Wilson chain
DISCNMAX=0
BAND="flat" thetaCh={"2.", "2."}
Discretization (channel 1)
"xitable" (channel 1)
xi(1.)(0)
"zetatable" (channel 1)
dzeta(1.)(0)
Precision last xi:Infinity
Precision last zeta: Infinity
Discretization (channel 2)
"xitable" (channel 2)
xi(2.)(0)
"zetatable" (channel 2)
dzeta(2.)(0)
Precision last xi:Infinity
Precision last zeta: Infinity
Discretization done.
thetaCh={"2.", "2."}
theta0Ch={"0.2", "0.2"}
gammaPolCh={"0.252313252202016", "0.252313252202016"}
calcgsenergy[]
diagvc[{-4, 1}]
Generating matrix: ham_-4.1
hamil={{-coefzeta[1, 0] - coefzeta[2, 0]}}
dim={1, 1}
diagvc[{-3, 2}]
Generating matrix: ham_-3.2
hamil={{-coefzeta[1, 0], 0, gammaPolCh[2], 0}, {0, -coefzeta[2, 0], 0, gammaPolCh[1]}, {gammaPolCh[2], 0, eps2 - coefzeta[1, 0] - coefzeta[2, 0], 0}, {0, gammaPolCh[1], 0, eps1 - coefzeta[1, 0] - coefzeta[2, 0]}}
dim={4, 4}
diagvc[{-2, 1}]
Generating matrix: ham_-2.1
hamil={{-coefzeta[1, 0] + coefzeta[2, 0], 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, gammaPolCh[1], 0, gammaPolCh[2], 0, 0, 0, 0}, {Sqrt[2]*gammaPolCh[2], 0, eps2 - coefzeta[1, 0], 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0}, 
   {0, gammaPolCh[1], 0, eps1 - coefzeta[1, 0], 0, 0, 0, 0, gammaPolCh[2], 0}, {0, 0, 0, 0, coefzeta[1, 0] - coefzeta[2, 0], 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0}, {0, gammaPolCh[2], 0, 0, 0, eps2 - coefzeta[2, 0], 0, 0, gammaPolCh[1], 0}, 
   {0, 0, 0, 0, Sqrt[2]*gammaPolCh[1], 0, eps1 - coefzeta[2, 0], 0, 0, Sqrt[2]*gammaPolCh[1]}, {0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 2*eps2 + U2 - coefzeta[1, 0] - coefzeta[2, 0], 0, 0}, 
   {0, 0, 0, gammaPolCh[2], 0, gammaPolCh[1], 0, 0, eps1 + eps2 - (3*J12)/4 + U12 - coefzeta[1, 0] - coefzeta[2, 0], 0}, {0, 0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 2*eps1 + U1 - coefzeta[1, 0] - coefzeta[2, 0]}}
dim={10, 10}
diagvc[{-2, 3}]
Generating matrix: ham_-2.3
hamil={{0, 0, gammaPolCh[1], -gammaPolCh[2], 0, 0}, {0, eps2 - coefzeta[1, 0], 0, 0, 0, 0}, {gammaPolCh[1], 0, eps1 - coefzeta[1, 0], 0, 0, gammaPolCh[2]}, {-gammaPolCh[2], 0, 0, eps2 - coefzeta[2, 0], 0, -gammaPolCh[1]}, 
   {0, 0, 0, 0, eps1 - coefzeta[2, 0], 0}, {0, 0, gammaPolCh[2], -gammaPolCh[1], 0, eps1 + eps2 + J12/4 + U12 - coefzeta[1, 0] - coefzeta[2, 0]}}
dim={6, 6}
diagvc[{-1, 2}]
Generating matrix: ham_-1.2
hamil={{coefzeta[2, 0], 0, gammaPolCh[1], 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, eps2 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, -gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {gammaPolCh[1], 0, eps1 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, Sqrt[3/2]*gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, coefzeta[1, 0], 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, 0, 0, 0, gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0}, {-(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, eps2, 0, 0, gammaPolCh[1], 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, 0, 0}, 
   {0, 0, 0, Sqrt[2]*gammaPolCh[1], 0, eps1, 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, 0, 0, 0, -1/2*gammaPolCh[2], 0, -1/2*(Sqrt[3]*gammaPolCh[2]), 0, 0}, 
   {0, -gammaPolCh[2], 0, 0, 0, 0, 2*eps2 + U2 - coefzeta[1, 0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, gammaPolCh[1], 0, 0, eps1 + eps2 - (3*J12)/4 + U12 - coefzeta[1, 0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0}, 
   {0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 2*eps1 + U1 - coefzeta[1, 0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, gammaPolCh[2]}, 
   {-(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0, 0, 0, 0, 0, 0, eps2, 0, -gammaPolCh[1], 0, 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, eps1, 0, 0, 0, 0, -1/2*(Sqrt[3]*gammaPolCh[2]), 0, gammaPolCh[2]/2, 0, 0}, 
   {0, 0, Sqrt[3/2]*gammaPolCh[2], 0, 0, 0, 0, 0, 0, -gammaPolCh[1], 0, eps1 + eps2 + J12/4 + U12 - coefzeta[1, 0], 0, 0, 0, 0, 0, 0, Sqrt[3/2]*gammaPolCh[2], 0}, 
   {0, 0, 0, gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, eps2 + coefzeta[1, 0] - coefzeta[2, 0], 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, eps1 + coefzeta[1, 0] - coefzeta[2, 0], 0, 0, -gammaPolCh[1], 0, 0, 0}, 
   {0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0, 0, 2*eps2 + U2 - coefzeta[2, 0], 0, 0, 0, gammaPolCh[1], 0}, 
   {0, 0, 0, 0, 0, -1/2*gammaPolCh[2], 0, 0, 0, 0, -1/2*(Sqrt[3]*gammaPolCh[2]), 0, -(gammaPolCh[1]/Sqrt[2]), 0, 0, eps1 + eps2 - (3*J12)/4 + U12 - coefzeta[2, 0], 0, 0, 0, -(gammaPolCh[1]/Sqrt[2])}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -gammaPolCh[1], 0, 0, 2*eps1 + U1 - coefzeta[2, 0], 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1/2*(Sqrt[3]*gammaPolCh[2]), 0, 0, 0, 0, gammaPolCh[2]/2, 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, 0, 0, eps1 + eps2 + J12/4 + U12 - coefzeta[2, 0], 0, -(Sqrt[3/2]*gammaPolCh[1])}, 
   {0, 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, Sqrt[3/2]*gammaPolCh[2], 0, 0, gammaPolCh[1], 0, 0, 0, eps1 + 2*eps2 + 2*U12 + U2 - coefzeta[1, 0] - coefzeta[2, 0], 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, gammaPolCh[2], 0, 0, 0, 0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 2*eps1 + eps2 + U1 + 2*U12 - coefzeta[1, 0] - coefzeta[2, 0]}}
dim={20, 20}
diagvc[{-1, 4}]
Generating matrix: ham_-1.4
hamil={{eps2, 0, -gammaPolCh[1], 0}, {0, eps1, 0, -gammaPolCh[2]}, {-gammaPolCh[1], 0, eps1 + eps2 + J12/4 + U12 - coefzeta[1, 0], 0}, {0, -gammaPolCh[2], 0, eps1 + eps2 + J12/4 + U12 - coefzeta[2, 0]}}
dim={4, 4}
diagvc[{0, 1}]
Generating matrix: ham_0.1
hamil={{coefzeta[1, 0] + coefzeta[2, 0], 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, eps2 + coefzeta[2, 0], 0, 0, gammaPolCh[1], 0, 0, 0, -gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {Sqrt[2]*gammaPolCh[1], 0, eps1 + coefzeta[2, 0], 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 2*eps2 + U2 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, gammaPolCh[1], 0, 0, eps1 + eps2 - (3*J12)/4 + U12 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, 0, 0, 0, -gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 2*eps1 + U1 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 0, 0}, 
   {Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 0, eps2 + coefzeta[1, 0], 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, eps1 + coefzeta[1, 0], 0, 0, -gammaPolCh[1], 0, 0, 0, 0, gammaPolCh[2], 0, 0, 0, 0}, {0, -gammaPolCh[2], 0, 0, 0, 0, 0, 0, 2*eps2 + U2, 0, 0, 0, gammaPolCh[1], 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, 0, eps1 + eps2 - (3*J12)/4 + U12, 0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, -gammaPolCh[1], 0, 0, 2*eps1 + U1, 0, 0, 0, 0, 0, 0, 0, gammaPolCh[2], 0}, 
   {0, 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, 0, 0, eps1 + eps2 + J12/4 + U12, 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0}, 
   {0, 0, 0, 0, -gammaPolCh[2], 0, 0, 0, gammaPolCh[1], 0, 0, 0, eps1 + 2*eps2 + 2*U12 + U2 - coefzeta[1, 0], 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 2*eps1 + eps2 + U1 + 2*U12 - coefzeta[1, 0], 0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2]}, 
   {0, 0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 2*eps2 + U2 + coefzeta[1, 0] - coefzeta[2, 0], 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, eps1 + eps2 - (3*J12)/4 + U12 + coefzeta[1, 0] - coefzeta[2, 0], 0, 0, -gammaPolCh[1], 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2*eps1 + U1 + coefzeta[1, 0] - coefzeta[2, 0], 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, eps1 + 2*eps2 + 2*U12 + U2 - coefzeta[2, 0], 0, Sqrt[2]*gammaPolCh[1]}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, gammaPolCh[2], 0, 0, 0, 0, -gammaPolCh[1], 0, 0, 2*eps1 + eps2 + U1 + 2*U12 - coefzeta[2, 0], 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, Sqrt[2]*gammaPolCh[1], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2 - coefzeta[1, 0] - coefzeta[2, 0]}}
dim={20, 20}
diagvc[{0, 3}]
Generating matrix: ham_0.3
hamil={{eps2 + coefzeta[2, 0], 0, -gammaPolCh[1], 0, 0, gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, eps1 + coefzeta[2, 0], 0, 0, 0, 0, gammaPolCh[2]/Sqrt[2], 0, -(gammaPolCh[2]/Sqrt[6]), 0, 0, (-2*gammaPolCh[2])/Sqrt[3], 0, 0, 0}, 
   {-gammaPolCh[1], 0, eps1 + eps2 + J12/4 + U12 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, 0, 0, -gammaPolCh[2], 0, 0, 0, 0, 0}, 
   {0, 0, 0, eps2 + coefzeta[1, 0], 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, eps1 + coefzeta[1, 0], 0, 0, -gammaPolCh[1], 0, 0, 0, 0, gammaPolCh[2], 0, 0}, 
   {gammaPolCh[2], 0, 0, 0, 0, 2*eps2 + U2, 0, 0, 0, gammaPolCh[1], 0, 0, 0, 0, 0}, {0, gammaPolCh[2]/Sqrt[2], 0, -(gammaPolCh[1]/Sqrt[2]), 0, 0, eps1 + eps2 - (3*J12)/4 + U12, 0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, 0, 
    gammaPolCh[2]/Sqrt[2], 0}, {0, 0, 0, 0, -gammaPolCh[1], 0, 0, 2*eps1 + U1, 0, 0, 0, 0, 0, 0, -gammaPolCh[2]}, 
   {0, -(gammaPolCh[2]/Sqrt[6]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, 0, 0, eps1 + eps2 + J12/4 + U12, 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, -(gammaPolCh[2]/Sqrt[6]), 0}, 
   {0, 0, -gammaPolCh[2], 0, 0, gammaPolCh[1], 0, 0, 0, eps1 + 2*eps2 + 2*U12 + U2 - coefzeta[1, 0], 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 2*eps1 + eps2 + U1 + 2*U12 - coefzeta[1, 0], 0, 0, 0, 0}, 
   {0, (-2*gammaPolCh[2])/Sqrt[3], 0, 0, 0, 0, 0, 0, 0, 0, 0, eps1 + eps2 + J12/4 + U12, 0, (-2*gammaPolCh[2])/Sqrt[3], 0}, 
   {0, 0, 0, 0, gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, eps1 + eps2 + J12/4 + U12 + coefzeta[1, 0] - coefzeta[2, 0], 0, gammaPolCh[1]}, 
   {0, 0, 0, 0, 0, 0, gammaPolCh[2]/Sqrt[2], 0, -(gammaPolCh[2]/Sqrt[6]), 0, 0, (-2*gammaPolCh[2])/Sqrt[3], 0, eps1 + 2*eps2 + 2*U12 + U2 - coefzeta[2, 0], 0}, 
   {0, 0, 0, 0, 0, 0, 0, -gammaPolCh[2], 0, 0, 0, 0, gammaPolCh[1], 0, 2*eps1 + eps2 + U1 + 2*U12 - coefzeta[2, 0]}}
dim={15, 15}
diagvc[{0, 5}]
Generating matrix: ham_0.5
hamil={{eps1 + eps2 + J12/4 + U12}}
dim={1, 1}
diagvc[{1, 2}]
Generating matrix: ham_1.2
hamil={{eps2 + coefzeta[1, 0] + coefzeta[2, 0], 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, -gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, eps1 + coefzeta[1, 0] + coefzeta[2, 0], 0, 0, -gammaPolCh[1], 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, 0, Sqrt[3/2]*gammaPolCh[2], 0, 0, 0, 0, 0}, 
   {0, 0, 2*eps2 + U2 + coefzeta[2, 0], 0, 0, 0, gammaPolCh[1], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {-(gammaPolCh[1]/Sqrt[2]), 0, 0, eps1 + eps2 - (3*J12)/4 + U12 + coefzeta[2, 0], 0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, 0, 0, gammaPolCh[2]/2, 0, 0, 0, (Sqrt[3]*gammaPolCh[2])/2, 0, 0, 0, 0}, 
   {0, -gammaPolCh[1], 0, 0, 2*eps1 + U1 + coefzeta[2, 0], 0, 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0}, 
   {-(Sqrt[3/2]*gammaPolCh[1]), 0, 0, 0, 0, eps1 + eps2 + J12/4 + U12 + coefzeta[2, 0], 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 0, 0, (Sqrt[3]*gammaPolCh[2])/2, 0, 0, 0, -1/2*gammaPolCh[2], 0, 0, 0, 0}, 
   {0, 0, gammaPolCh[1], 0, 0, 0, eps1 + 2*eps2 + 2*U12 + U2 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, -(gammaPolCh[1]/Sqrt[2]), 0, -(Sqrt[3/2]*gammaPolCh[1]), 0, 2*eps1 + eps2 + U1 + 2*U12 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, 0, -gammaPolCh[2], 0, 0, 0, 0, 0, 0}, 
   {-gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 2*eps2 + U2 + coefzeta[1, 0], 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, 0, 0, 0, 0, eps1 + eps2 - (3*J12)/4 + U12 + coefzeta[1, 0], 0, 0, -gammaPolCh[1], 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2*eps1 + U1 + coefzeta[1, 0], 0, 0, 0, 0, 0, 0, 0, gammaPolCh[2], 0}, 
   {0, 0, 0, gammaPolCh[2]/2, 0, (Sqrt[3]*gammaPolCh[2])/2, 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, eps1 + 2*eps2 + 2*U12 + U2, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, 0, -gammaPolCh[1], 0, 0, 2*eps1 + eps2 + U1 + 2*U12, 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2])}, 
   {0, 0, 0, 0, 0, 0, 0, -gammaPolCh[2], 0, 0, 0, Sqrt[2]*gammaPolCh[1], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2 - coefzeta[1, 0], 0, 0, 0, 0, 0, 0}, 
   {0, Sqrt[3/2]*gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, eps1 + eps2 + J12/4 + U12 + coefzeta[1, 0], 0, gammaPolCh[1], Sqrt[3/2]*gammaPolCh[2], 0, 0}, 
   {0, 0, 0, (Sqrt[3]*gammaPolCh[2])/2, 0, -1/2*gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 0, 0, eps1 + 2*eps2 + 2*U12 + U2, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -(Sqrt[3/2]*gammaPolCh[2]), 0, 0, 0, 0, 0, 0, 0, 0, 0, gammaPolCh[1], 0, 2*eps1 + eps2 + U1 + 2*U12, 0, 0, -(Sqrt[3/2]*gammaPolCh[2])}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, 0, Sqrt[3/2]*gammaPolCh[2], 0, 0, eps1 + 2*eps2 + 2*U12 + U2 + coefzeta[1, 0] - coefzeta[2, 0], 0, -gammaPolCh[1]}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, gammaPolCh[2], 0, 0, 0, 0, 0, 0, 0, 2*eps1 + eps2 + U1 + 2*U12 + coefzeta[1, 0] - coefzeta[2, 0], 0}, 
   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -(gammaPolCh[2]/Sqrt[2]), 0, 0, 0, -(Sqrt[3/2]*gammaPolCh[2]), -gammaPolCh[1], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2 - coefzeta[2, 0]}}
dim={20, 20}
diagvc[{1, 4}]
Generating matrix: ham_1.4
hamil={{eps1 + eps2 + J12/4 + U12 + coefzeta[2, 0], 0, gammaPolCh[2], 0}, {0, eps1 + eps2 + J12/4 + U12 + coefzeta[1, 0], 0, gammaPolCh[1]}, {gammaPolCh[2], 0, eps1 + 2*eps2 + 2*U12 + U2, 0}, 
   {0, gammaPolCh[1], 0, 2*eps1 + eps2 + U1 + 2*U12}}
dim={4, 4}
diagvc[{2, 1}]
Generating matrix: ham_2.1
hamil={{2*eps2 + U2 + coefzeta[1, 0] + coefzeta[2, 0], 0, 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, 0, 0, 0}, {0, eps1 + eps2 - (3*J12)/4 + U12 + coefzeta[1, 0] + coefzeta[2, 0], 0, 0, -gammaPolCh[1], 0, -gammaPolCh[2], 0, 0, 0}, 
   {0, 0, 2*eps1 + U1 + coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 0}, {Sqrt[2]*gammaPolCh[1], 0, 0, eps1 + 2*eps2 + 2*U12 + U2 + coefzeta[2, 0], 0, Sqrt[2]*gammaPolCh[1], 0, 0, 0, 0}, 
   {0, -gammaPolCh[1], 0, 0, 2*eps1 + eps2 + U1 + 2*U12 + coefzeta[2, 0], 0, 0, 0, -gammaPolCh[2], 0}, {0, 0, 0, Sqrt[2]*gammaPolCh[1], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2 - coefzeta[1, 0] + coefzeta[2, 0], 0, 0, 0, 0}, 
   {0, -gammaPolCh[2], 0, 0, 0, 0, eps1 + 2*eps2 + 2*U12 + U2 + coefzeta[1, 0], 0, -gammaPolCh[1], 0}, {0, 0, Sqrt[2]*gammaPolCh[2], 0, 0, 0, 0, 2*eps1 + eps2 + U1 + 2*U12 + coefzeta[1, 0], 0, Sqrt[2]*gammaPolCh[2]}, 
   {0, 0, 0, 0, -gammaPolCh[2], 0, -gammaPolCh[1], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2, 0}, {0, 0, 0, 0, 0, 0, 0, Sqrt[2]*gammaPolCh[2], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2 + coefzeta[1, 0] - coefzeta[2, 0]}}
dim={10, 10}
diagvc[{2, 3}]
Generating matrix: ham_2.3
hamil={{eps1 + eps2 + J12/4 + U12 + coefzeta[1, 0] + coefzeta[2, 0], 0, gammaPolCh[1], -gammaPolCh[2], 0, 0}, {0, eps1 + 2*eps2 + 2*U12 + U2 + coefzeta[2, 0], 0, 0, 0, 0}, 
   {gammaPolCh[1], 0, 2*eps1 + eps2 + U1 + 2*U12 + coefzeta[2, 0], 0, 0, gammaPolCh[2]}, {-gammaPolCh[2], 0, 0, eps1 + 2*eps2 + 2*U12 + U2 + coefzeta[1, 0], 0, -gammaPolCh[1]}, {0, 0, 0, 0, 2*eps1 + eps2 + U1 + 2*U12 + coefzeta[1, 0], 0}, 
   {0, 0, gammaPolCh[2], -gammaPolCh[1], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2}}
dim={6, 6}
diagvc[{3, 2}]
Generating matrix: ham_3.2
hamil={{eps1 + 2*eps2 + 2*U12 + U2 + coefzeta[1, 0] + coefzeta[2, 0], 0, -gammaPolCh[1], 0}, {0, 2*eps1 + eps2 + U1 + 2*U12 + coefzeta[1, 0] + coefzeta[2, 0], 0, -gammaPolCh[2]}, 
   {-gammaPolCh[1], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2 + coefzeta[2, 0], 0}, {0, -gammaPolCh[2], 0, 2*eps1 + 2*eps2 + U1 + 4*U12 + U2 + coefzeta[1, 0]}}
dim={4, 4}
diagvc[{4, 1}]
Generating matrix: ham_4.1
hamil={{2*eps1 + 2*eps2 + U1 + 4*U12 + U2 + coefzeta[1, 0] + coefzeta[2, 0]}}
dim={1, 1}
Lowest energies (absolute):{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2}
Lowest energies (GS shifted):{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1}
Scale factor SCALE(Ninit):1.0201394465967895
Lowest energies (shifted and scaled):{0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.9802581434685472, 0.9802581434685472, 0.9802581434685472, 0.9802581434685472, 0.9802581434685472}
makeireducf GENERAL
Loading module operators.m
operators.m started
operators.m done
Loading module customoperators.m
Can't load customoperators.m. Continuing.
Loading module modeloperators.m
s: n_d1 nc[d[0, 1, 0], d[1, 1, 0]] + nc[d[0, 1, 1], d[1, 1, 1]]
s: n_d2 nc[d[0, 2, 0], d[1, 2, 0]] + nc[d[0, 2, 1], d[1, 2, 1]]
s: n_d1^2 nc[d[0, 1, 0], d[1, 1, 0]] + nc[d[0, 1, 1], d[1, 1, 1]] - 2*nc[d[0, 1, 0], d[0, 1, 1], d[1, 1, 0], d[1, 1, 1]]
s: n_d2^2 nc[d[0, 2, 0], d[1, 2, 0]] + nc[d[0, 2, 1], d[1, 2, 1]] - 2*nc[d[0, 2, 0], d[0, 2, 1], d[1, 2, 0], d[1, 2, 1]]
s: S_d1S_d2 -1/4*nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] + nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]]/4 - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 1], d[1, 2, 0]]/2 - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 0], d[1, 2, 1]]/2 + 
   nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]]/4 - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]/4
s: n_d1n_d2 -nc[d[0, 1, 0], d[0, 2, 0], d[1, 1, 0], d[1, 2, 0]] - nc[d[0, 1, 0], d[0, 2, 1], d[1, 1, 0], d[1, 2, 1]] - nc[d[0, 1, 1], d[0, 2, 0], d[1, 1, 1], d[1, 2, 0]] - nc[d[0, 1, 1], d[0, 2, 1], d[1, 1, 1], d[1, 2, 1]]
s: SigmaHartree1 (U1*nc[d[0, 1, 0], d[1, 1, 0]])/2 + (U1*nc[d[0, 1, 1], d[1, 1, 1]])/2 + U12*nc[d[0, 2, 0], d[1, 2, 0]] + U12*nc[d[0, 2, 1], d[1, 2, 1]]
s: SigmaHartree2 U12*nc[d[0, 1, 0], d[1, 1, 0]] + U12*nc[d[0, 1, 1], d[1, 1, 1]] + (U2*nc[d[0, 2, 0], d[1, 2, 0]])/2 + (U2*nc[d[0, 2, 1], d[1, 2, 1]])/2
d: A_d1 d[1]
d: A_d2 d[2]
d: self_d1 Chop[Expand[komutator[Hint, d[#1, 1, #2]]]] & 
d: self_d2 Chop[Expand[komutator[Hint, d[#1, 2, #2]]]] & 
t: sigma_d1 d[1]
t: sigma_d2 d[2]
Timing report
{basis, 0.174068`5.69226393290298}
{ham, 2.5813319999999999999`5.6872975996952455}
{maketable, 5.957597`7.226616115638563}
{xi, 0.002974`3.9248859576819064}
{_, 0}
data.in
"Success!"
