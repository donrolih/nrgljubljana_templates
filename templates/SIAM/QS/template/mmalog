NRG Ljubljana 2023.05 (c) Rok Zitko, rok.zitko@ijs.si, 2005-2023
Mathematica version: 13.3.0 for Linux x86 (64-bit) (June 3, 2023)
sneg version: 2.0.7
Loading module initialparse.m
Loading module sym.m
Options: {GENERATE_TEMPLATE, GENERATE_TEMPLATE_ALL}
Loading module models.m
models started
Loading module custommodels.m
Can't load custommodels.m. Continuing.
Loading module SIAM.m
def1ch, NRDOTS=1
H0=coefzeta[1, 0]*(-1 + nc[f[0, 0, 0], f[1, 0, 0]] + nc[f[0, 0, 1], f[1, 0, 1]])
"SigmaHartree[UP]="-nc[d[0, 1], d[1, 1], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]] + nc[d[0, 1], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[1, 1]] - nc[d[1, 1], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 1]] - 
   nc[U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 1], d[1, 1]] + U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]
"SigmaHartree[DO]="-nc[d[0, 0], d[1, 0], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]] + nc[d[0, 0], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[1, 0]] - nc[d[1, 0], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 0]] - 
   nc[U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 0], d[1, 0]] + U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]
"SigmaHartree="(-nc[d[0, 0], d[1, 0], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]] + nc[d[0, 0], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[1, 0]] - nc[d[0, 1], d[1, 1], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]] + 
     nc[d[0, 1], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[1, 1]] - nc[d[1, 0], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 0]] - nc[d[1, 1], U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 1]] - 
     nc[U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 0], d[1, 0]] - nc[U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]], d[0, 1], d[1, 1]] + 2*U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]])/2
NRDOTS:1 CHANNELS:1 COEFCHANNELS:1
basis:{d[], f[0]}
Hamiltonian generated. -coefzeta[1, 0] + eps1*nc[d[0, 0], d[1, 0]] + gammaPolCh[1]*nc[d[0, 0], f[1, 0, 0]] + eps1*nc[d[0, 1], d[1, 1]] + gammaPolCh[1]*nc[d[0, 1], f[1, 0, 1]] + gammaPolCh[1]*nc[f[0, 0, 0], d[1, 0]] + 
   coefzeta[1, 0]*nc[f[0, 0, 0], f[1, 0, 0]] + gammaPolCh[1]*nc[f[0, 0, 1], d[1, 1]] + coefzeta[1, 0]*nc[f[0, 0, 1], f[1, 0, 1]] - U1*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]
SCALE[0]=1.0201394465967895
faktor=1.3862943611198906
Generating basis
Wilson chain
DISCNMAX=0
BAND="flat" thetaCh={"2."}
Discretization (channel 1)
"xitable" (channel 1)
xi(1.)(0)
"zetatable" (channel 1)
dzeta(1.)(0)
Precision last xi:Infinity
Precision last zeta: Infinity
Discretization done.
thetaCh={"2."}
theta0Ch={"0.2"}
gammaPolCh={"0.252313252202016"}
calcgsenergy[]
diagvc[{-2, 1}]
Generating matrix: ham_-2.1
hamil={{-coefzeta[1, 0]}}
dim={1, 1}
diagvc[{-1, 2}]
Generating matrix: ham_-1.2
hamil={{0, gammaPolCh[1]}, {gammaPolCh[1], eps1 - coefzeta[1, 0]}}
dim={2, 2}
diagvc[{0, 1}]
Generating matrix: ham_0.1
hamil={{coefzeta[1, 0], Sqrt[2]*gammaPolCh[1], 0}, {Sqrt[2]*gammaPolCh[1], eps1, Sqrt[2]*gammaPolCh[1]}, {0, Sqrt[2]*gammaPolCh[1], 2*eps1 + U1 - coefzeta[1, 0]}}
dim={3, 3}
diagvc[{0, 3}]
Generating matrix: ham_0.3
hamil={{eps1}}
dim={1, 1}
diagvc[{1, 2}]
Generating matrix: ham_1.2
hamil={{eps1 + coefzeta[1, 0], -gammaPolCh[1]}, {-gammaPolCh[1], 2*eps1 + U1}}
dim={2, 2}
diagvc[{2, 1}]
Generating matrix: ham_2.1
hamil={{2*eps1 + U1 + coefzeta[1, 0]}}
dim={1, 1}
Lowest energies (absolute):{1, 1, 1, 1, 1, 1, 2, 2, 2, 3}
Lowest energies (GS shifted):{0, 0, 0, 0, 0, 0, 1, 1, 1, 2}
Scale factor SCALE(Ninit):1.0201394465967895
Lowest energies (shifted and scaled):{0., 0., 0., 0., 0., 0., 0.9802581434685472, 0.9802581434685472, 0.9802581434685472, 1.9605162869370945}
makeireducf GENERAL
Loading module operators.m
operators.m started
s: n_d nc[d[0, 0], d[1, 0]] + nc[d[0, 1], d[1, 1]]
s: n_d_ud -nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]
s: n_d^2 nc[d[0, 0], d[1, 0]] + nc[d[0, 1], d[1, 1]] - 2*nc[d[0, 0], d[0, 1], d[1, 0], d[1, 1]]
s: hop0 nc[d[0, 0], f[1, 0, 0]] + nc[d[0, 1], f[1, 0, 1]] + nc[f[0, 0, 0], d[1, 0]] + nc[f[0, 0, 1], d[1, 1]]
d: A_d d
t: sigma_d d[]
d: self_d Chop[Expand[komutator[Hint, d[#1, #2]]]] & 
operators.m done
Loading module customoperators.m
Can't load customoperators.m. Continuing.
Loading module modeloperators.m
s: SigmaHartree (U1*nc[d[0, 0], d[1, 0]])/2 + (U1*nc[d[0, 1], d[1, 1]])/2
Timing report
{basis, 0.006739`4.280140449867675}
{ham, 0.080468`4.5790169503575395}
{maketable, 0.412044`6.066488588016717}
{xi, 0.002697`3.8824259399488645}
{_, 0}
data.in
"Success!"
